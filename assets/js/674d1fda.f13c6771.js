(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7273],{30876:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=i(t),m=a,T=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return t?r.createElement(T,o(o({ref:n},u),{},{components:t})):r.createElement(T,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=c;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var i=2;i<l;i++)o[i]=t[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1817:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return u},default:function(){return c}});var r=t(7560),a=t(98283),l=(t(2784),t(30876)),o=["components"],p={id:"cross-tree-table",title:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c"},s=void 0,i={unversionedId:"pivot/cross-tree-table",id:"pivot/cross-tree-table",isDocsHomePage:!1,title:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c",description:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\uff08CrossTreeTable\uff09\u4e0e\u4ea4\u53c9\u8868\uff08CrossTable\uff09\u7c7b\u4f3c\uff0c\u4f46\u5728\u8868\u683c\u5de6\u4fa7\u63d0\u4f9b\u4e86\u6811\u72b6\u5c55\u5f00/\u6536\u62e2\u7684\u80fd\u529b\uff0c\u66f4\u9002\u7528\u4e8e\u65e5\u5e38\u4e1a\u52a1\u5f00\u53d1\u3002",source:"@site/docs/pivot/cross-tree-table.mdx",sourceDirName:"pivot",slug:"/pivot/cross-tree-table",permalink:"/docs/pivot/cross-tree-table",editUrl:"https://github.com/alibaba/ali-react-table/edit/master/packages/website/docs/pivot/cross-tree-table.mdx",version:"current",frontMatter:{id:"cross-tree-table",title:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c"},sidebar:"sidebar",previous:{title:"\u4ea4\u53c9\u8868",permalink:"/docs/pivot/cross-table"},next:{title:"\u900f\u89c6\u5de5\u5177",permalink:"/docs/pivot/pivot-utils"}},u=[{value:"\u4e3b\u8981\u7279\u6027",id:"\u4e3b\u8981\u7279\u6027",children:[]},{value:"\u7528\u6cd5",id:"\u7528\u6cd5",children:[]},{value:"leftTree \u7684\u7ed3\u6784 / topTree \u7684\u7ed3\u6784",id:"lefttree-\u7684\u7ed3\u6784--toptree-\u7684\u7ed3\u6784",children:[]},{value:"\u5176\u4ed6 props",id:"\u5176\u4ed6-props",children:[]},{value:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\u5b9a\u5236",id:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\u5b9a\u5236",children:[]}],d={toc:u};function c(e){var n=e.components,t=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\uff08CrossTreeTable\uff09\u4e0e\u4ea4\u53c9\u8868\uff08CrossTable\uff09\u7c7b\u4f3c\uff0c\u4f46\u5728\u8868\u683c\u5de6\u4fa7\u63d0\u4f9b\u4e86\u6811\u72b6\u5c55\u5f00/\u6536\u62e2\u7684\u80fd\u529b\uff0c\u66f4\u9002\u7528\u4e8e\u65e5\u5e38\u4e1a\u52a1\u5f00\u53d1\u3002"),(0,l.kt)("h2",{id:"\u4e3b\u8981\u7279\u6027"},"\u4e3b\u8981\u7279\u6027"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u4f9d\u8d56\u7279\u5b9a\u7ec4\u4ef6\u5e93\uff0c\u53ef\u72ec\u7acb\u4f7f\u7528"),(0,l.kt)("li",{parentName:"ul"},"\u7b80\u5355\u3001\u4e00\u81f4\u7684 API \u4e0e\u6e32\u67d3\u6a21\u578b\uff1a",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"\u5de6\u6811 + \u4e0a\u6811 => \u8868\u683c"))),(0,l.kt)("li",{parentName:"ul"},"\u9ad8\u6027\u80fd\uff1a\u6570\u636e\u91cf\u8f83\u5927\u65f6\uff0c\u81ea\u52a8\u5f00\u542f\u865a\u62df\u6eda\u52a8")),(0,l.kt)("h2",{id:"\u7528\u6cd5"},"\u7528\u6cd5"),(0,l.kt)("p",null,"CrossTreeTable \u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"primaryColumn")," \u63cf\u8ff0\u8868\u683c\u7b2c\u4e00\u5217"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"leftTree")," \u63cf\u8ff0\u8868\u683c\u5de6\u4fa7\u7684\u6811\u72b6\u7ed3\u6784\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"topTree")," \u63cf\u8ff0\u8868\u683c\u4e0a\u65b9\u7684\u6811\u72b6\u7ed3\u6784\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"getValue")," \u6765\u5b9a\u4e49\u6bcf\u4e2a\u5355\u5143\u683c\u5185\u5bb9\uff1b"),(0,l.kt)("li",{parentName:"ul"},"CrossTreeTable \u4f1a\u6839\u636e leftTree/topTree \u6765\u6e32\u67d3\u8868\u683c\u7ed3\u6784\uff0c\u5e76\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"getValue")," \u83b7\u53d6\u5355\u5143\u683c\u7684\u5185\u5bb9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// prettier-ignore\n<CrossTreeTable\n  // \u63a8\u8350\u4e3a CrossTreeTable \u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u5217\u5bbd\n  defaultColumnWidth={100}\n\n  // \u975e\u53d7\u63a7\u7528\u6cd5\n  defaultOpenKeys={[leftTree[0].key]}\n\n  // \u53d7\u63a7\u7528\u6cd5\n  // openKeys={openKeys}\n  // onChangeOpenKeys={nextOpenKeys => { /* update openKeys */ }}\n\n  // \u8868\u683c\u7b2c\u4e00\u5217\u7684\u914d\u7f6e\n  primaryColumn={{ lock: true, name: '\u6570\u636e\u7ef4\u5ea6', width: 200 }}\n\n  leftTree={leftTree}\n  topTree={topTree}\n  getValue={(leftNode, topNode) => {\n    // \u81ea\u5b9a\u4e49\u7684\u53d6\u6570\u903b\u8f91\uff0c\u9488\u5bf9\u6bcf\u4e2a\u5355\u5143\u683c\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21\n    // leftNode \u8868\u793a\u5f53\u524d\u5355\u5143\u683c\u5bf9\u5e94\u7684\u5de6\u4fa7\u6811\u8282\u70b9\uff0ctopNode \u662f\u5bf9\u5e94\u7684\u4e0a\u65b9\u6811\u8282\u70b9\n  }}\n\n  // \u53ef\u9009\u7684\u81ea\u5b9a\u4e49\u7684\u6e32\u67d3\u903b\u8f91\n  render={(value, leftNode, topNode) => {\n    return value\n  }}\n/>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicCrossTreeTableUsage() {\n  const leftTree = [\n    {\n      key: 'forenoon',\n      value: '\u4e0a\u5348',\n      data: { parent: true },\n      children: [\n        { key: '9', value: '9:00-10:00', data: { x: 0 } },\n        { key: '10', value: '10:00-11:00', data: { x: 1 } },\n        { key: '11', value: '11:00-12:00', data: { x: 2 } },\n      ],\n    },\n    {\n      key: 'afternoon',\n      value: '\u4e0b\u5348',\n      data: { parent: true },\n      children: [\n        { key: '14', value: '14:00-15:00', data: { x: 3 } },\n        { key: '15', value: '15:00-16:00', data: { x: 4 } },\n        { key: '16', value: '16:00-17:00', data: { x: 5 } },\n      ],\n    },\n    {\n      key: 'evening',\n      value: '\u665a\u4e0a',\n      data: { parent: true },\n      children: [\n        { key: '20', value: '20:00-21:00', data: { x: 7 } },\n        { key: '21', value: '21:00-22:00', data: { x: 8 } },\n      ],\n    },\n  ]\n  const makeTopChildren = (keyPrefix) => [\n    { key: `${keyPrefix}-week-0`, value: '\u7b2c\u4e00\u5468', data: { y: 0 } },\n    { key: `${keyPrefix}-week-1`, value: '\u7b2c\u4e8c\u5468', data: { y: 1 } },\n    { key: `${keyPrefix}-week-2`, value: '\u7b2c\u4e09\u5468', data: { y: 2 } },\n    { key: `${keyPrefix}-week-3`, value: '\u7b2c\u56db\u5468', data: { y: 3 } },\n  ]\n  const topTree = [\n    { key: '2021-01', value: '2021-01', children: makeTopChildren('2021-01') },\n    { key: '2021-02', value: '2021-02', children: makeTopChildren('2021-02') },\n    { key: '2021-03', value: '2021-03', children: makeTopChildren('2021-03') },\n    { key: '2021-04', value: '2021-04', children: makeTopChildren('2021-04') },\n    { key: '2021-05', value: '2021-05', children: makeTopChildren('2021-05') },\n    { key: '2021-06', value: '2021-06', children: makeTopChildren('2021-06') },\n  ]\n  const getValue = (leftNode, topNode) => {\n    if (leftNode.data.parent) {\n      const map = {\n        forenoon: '\u4e07\u4e8b\u5f00\u5934\u96be',\n        afternoon: '\u7136\u540e\u4e2d\u95f4\u96be',\n        evening: '\u6700\u540e\u7ed3\u675f\u96be',\n      }\n      return map[leftNode.key]\n    }\n    const courses = ['\u6570\u5b66', '\u82f1\u8bed', '\u8ba1\u7b97\u673a\u57fa\u7840', '\u6570\u636e\u7ed3\u6784', '\u7ebf\u6027\u4ee3\u6570', '\u5fae\u79ef\u5206', '\u6982\u7387\u8bba']\n    const i = (leftNode.data.x + topNode.data.y) % courses.length\n    return courses[i]\n  }\n  return (\n    <div>\n      <p style={{ fontSize: 16, marginTop: 0 }}>2021\u5e74 \u5b66\u4e60\u8ba1\u5212</p>\n      <CrossTreeTable\n        // \u975e\u53d7\u63a7\u7528\u6cd5\uff1a\n        defaultOpenKeys={[leftTree[0].key]}\n        // \u53d7\u63a7\u7528\u6cd5\uff1a\n        // const [openKeys, onChangeOpenKeys] = useState([leftTree[0].key])\n        // openKeys={openKeys}\n        // onChangeOpenKeys={onChangeOpenKeys}\n        // \u8868\u683c\u7b2c\u4e00\u5217\u7684\u914d\u7f6e\n        primaryColumn={{ lock: true, name: '\u6570\u636e\u7ef4\u5ea6', width: 200 }}\n        defaultColumnWidth={100}\n        leftTree={leftTree}\n        topTree={topTree}\n        getValue={getValue}\n      />\n    </div>\n  )\n}\n")),(0,l.kt)("h2",{id:"lefttree-\u7684\u7ed3\u6784--toptree-\u7684\u7ed3\u6784"},"leftTree \u7684\u7ed3\u6784 / topTree \u7684\u7ed3\u6784"),(0,l.kt)("p",null,"leftTree/topTree \u90fd\u662f\u4e00\u4e2a\u5177\u6709 key/value/children \u5d4c\u5957\u7ed3\u6784\u7684\u6570\u7ec4\uff0c\u8be6\u89c1 ",(0,l.kt)("a",{parentName:"p",href:"cross-table"},"\u4ea4\u53c9\u8868\u6587\u6863"),"."),(0,l.kt)("p",null,"\u6ce8\u610f CrossTreeTable \u5bf9\u4e8e leftTree \u548c topTree \u7684\u5904\u7406\u6709\u6240\u4e0d\u540c\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"leftTree \u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u8868\u683c\u4e2d\u7684\u4e00\u884c\uff0c\u5305\u62ec\u53f6\u5b50\u8282\u70b9\u548c\u975e\u53f6\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"topTree \u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94 \u8868\u683c\u4e0a\u7684\u4e00\u5217")),(0,l.kt)("h2",{id:"\u5176\u4ed6-props"},"\u5176\u4ed6 props"),(0,l.kt)("p",null,"CrossTreeTable \u7684\u5e95\u5c42\u4f9d\u8d56\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"BaseTable"),"\uff0c\u6545\u4e24\u8005\u7684 props \u5927\u90e8\u5206\u662f\u76f8\u540c\u7684\u3002\u4e24\u8005\u7684\u4e0d\u540c\u70b9\u5177\u4f53\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CrossTreeTable \u6ca1\u6709 dataSource \u548c columns",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8868\u683c\u7ed3\u6784\u7531 leftTree \u548c rightTree \u63d0\u4f9b\uff0c\u800c\u5355\u5143\u683c\u5185\u5bb9\u7531 getValue \u63d0\u4f9b"),(0,l.kt)("li",{parentName:"ul"},"\u5355\u5143\u683c\u6e32\u67d3\u5185\u5bb9\u53ef\u4f7f\u7528 render \u8fdb\u884c\u81ea\u5b9a\u4e49\uff1b\u5355\u5143\u683c\u7684 props\uff08\u5373\u8868\u683c\u5185\u7684 td \u5143\u7d20\uff09\u53ef\u4f7f\u7528 getCellProps \u8fdb\u884c\u81ea\u5b9a\u4e49"))),(0,l.kt)("li",{parentName:"ul"},"CrossTreeTable \u6ca1\u6709 primaryKey",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"CrossTreeTable \u5de6\u4fa7\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 key \u503c\uff0c\u6545\u4e0d\u518d\u9700\u8981\u4e0a\u5c42\u6307\u5b9a primaryKey"))),(0,l.kt)("li",{parentName:"ul"},"\u5176\u4ed6\u65b0\u589e\u7684 props",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"CrossTreeTable \u4f7f\u7528 primaryColumn \u6765\u63cf\u8ff0 \u8868\u683c\u7b2c\u4e00\u5217\u7684\u914d\u7f6e"),(0,l.kt)("li",{parentName:"ul"},"openKeys/onChangeOpenKeys/defaultOpenKeys\uff1a\u6811\u72b6\u6a21\u5f0f\u4e0b\u5c55\u5f00\u8282\u70b9\u7684 key \u6570\u7ec4")))),(0,l.kt)("p",null,"CrossTreeTable props \u5177\u4f53\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface CrossTreeTableProps extends Omit<BaseTableProps, 'dataSource' | 'columns' | 'primaryKey'> {\n  primaryColumn: CrossTableLeftMetaColumn\n  leftTree: LeftCrossTreeNode[]\n  topTree: TopCrossTreeNode[]\n\n  defaultOpenKeys?: string[]\n  openKeys?: string[]\n  onChangeOpenKeys?(nextOpenKeys: string[]): void\n\n  getValue(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): any\n  render?(\n    value: any,\n    leftNode: LeftCrossTreeNode\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): ReactNode\n  getCellProps?(\n    value: any,\n    leftNode: LeftCrossTreeNode,\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): CellProps\n}\n\nexport interface CrossTableLeftMetaColumn extends Omit<ArtColumnStaticPart, 'hidden'> {\n  /** \u81ea\u5b9a\u4e49\u6e32\u67d3\u65b9\u6cd5 */\n  render?(leftNode: LeftCrossTreeNode, leftDepth: number): ReactNode\n\n  /** \u81ea\u5b9a\u4e49\u7684\u83b7\u53d6\u5355\u5143\u683c props \u7684\u65b9\u6cd5 */\n  getCellProps?(leftNode: LeftCrossTreeNode, leftDepth: number): CellProps\n}\n")),(0,l.kt)("p",null,"\u4e0d\u8981\u88ab\u957f\u957f\u7684 TypeScript \u7c7b\u578b\u4ee3\u7801\u5413\u5230\uff0cCrossTreeTable \u7684 props \u5176\u5b9e\u548c BaseTable \u5dee\u522b\u4e0d\u5927\u3002"),(0,l.kt)("h2",{id:"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\u5b9a\u5236"},"\u4ea4\u53c9\u6811\u72b6\u8868\u683c\u5b9a\u5236"),(0,l.kt)("p",null,"CrossTreeTable \u7684\u5e95\u5c42\u4ecd\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"<BaseTable />"),"\u3002"),(0,l.kt)("p",null,"\u5bf9 CrossTreeTable \u8fdb\u884c\u5b9a\u5236\u65f6\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"buildCrossTreeTable")," \u6839\u636e CrossTreeTable \u7684\u8f93\u5165\u751f\u6210 dataSource / columns\uff0c\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5904\u7406\uff0c\u7136\u540e\u518d\u5c06\u5904\u7406\u597d\u7684\u6570\u636e\u4f20\u7ed9 BaseTable\uff0c\u5e76\u6ce8\u610f\u4e3a BaseTable \u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey={ROW_KEY}"),"\u3002"),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("a",{parentName:"p",href:"/docs/pipeline/"},"pipeline")," \u8fdb\u884c\u8868\u683c\u529f\u80fd\u62d3\u5c55\uff08\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a",(0,l.kt)("a",{parentName:"p",href:"/examples/others/cross-table-customization"},"\u793a\u4f8b"),"\uff09\uff0c\u4f46\u56e0\u4e3a CrossTreeTable \u672c\u8eab\u5f88\u590d\u6742\uff0c\u53ea\u6709\u4e00\u90e8\u5206\u6bd4\u8f83\u7b80\u5355\u7684 pipeline feature \u53ef\u4ee5\u548c CrossTreeTable \u4e00\u8d77\u5de5\u4f5c."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { BaseTable } from 'ali-react-table'\nimport { buildCrossTreeTable, ROW_KEY } from 'ali-react-table/pivot'\n\nfunction MyComplexTable() {\n  // \u5c06\u300c\u4f20\u7ed9 CrossTreeTable \u7684\u53c2\u6570\u300d\u4f20\u7ed9 buildCrossTreeTable\n  const { dataSource, columns } = buildCrossTreeTable({\n    leftTree,\n    topTree,\n    getValue,\n    render,\n\n    // \u8c03\u7528 buildCrossTreeTable \u5fc5\u987b\u4f20\u5165\u4e00\u4efd\u53d7\u63a7\u7684 openKeys \u72b6\u6001\n    openKeys: ['a', 'b', 'c'],\n    onChangeOpenKeys(nextOpenKeys) {},\n\n    // \u8fd9\u91cc\u4e5f\u652f\u6301 CrossTreeTable \u7684\u5176\u4ed6 props\n  })\n\n  // \u5728\u8fd9\u91cc\u53ef\u4ee5\u5bf9 dataSource \u548c columns \u8fdb\u884c\u4e00\u5b9a\u7684\u5904\u7406\u540e\uff0c\u518d\u5c06\u6570\u636e\u4f20\u9012\u7ed9 BaseTable\n\n  return (\n    <BaseTable\n      className=\"my-complex-table\"\n      primaryKey={ROW_KEY}\n      defaultColumnWidth={100}\n      dataSource={dataSource}\n      columns={columns}\n    />\n  )\n}\n")))}c.isMDXComponent=!0}}]);